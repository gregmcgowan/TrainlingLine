1. @Inject on a class constructor tells Dagger how to create an object.
If the constructor has parameters then Dagger must be able to know how to create
the parameters type as well.

2. @Inject on a class field type tells dagger that we want it to create an object for us.

3. In order for us to define what classes (and by extension types) we want dagger to create,
we must define a graph by creating an interface annotated by @Component

4. When the project is complied, dagger will validate the graph to ensure all dependencies can be
provided and there is no cyclic dependencies. If successful it will create the
generated code we can call to initialise our objects. The generated code will be prefixed with
Dagger e.g DaggerAppComponent